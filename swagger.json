{
  "openapi": "3.0.1",
  "info": {
    "title": "TALKIE application",
    "description": "This is the Swagger documentation for interacting with our application's API. TALKIE is an application where anyone can join a discussion on different topics. There is a list of chats (topics). Users can join using only a username (no authorization required). There are public and private chats. In public chats, more than 2 users can communicate at the same time (even with the same nickname). Search by name and description is implemented for public chats and by name for private chats.",
    "contact": {
      "name": "TALKIE",
      "url": "https://talkiehub.netlify.app/"
    },
    "version": "1.0.5"
  },
  "externalDocs": {
    "description": "API for TALKIE application",
    "url": "https://github.com/TaitanB/teamchallenge-chat-api"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://teamchallenge-chat-api.onrender.com/api" },
    { "url": "http://localhost:3001/api" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Rooms",
      "description": "Rooms endpoints"
    },
    {
      "name": "Messages",
      "description": "Messages endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "New user registration",
        "produces": ["application/json"],
        "requestBody": {
          "description": "The request body user registration",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user is registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Unique user's ApiKey"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Successful user logout",
            "content": {}
          },
          "401": {
            "description": "This user does not exist",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get data current user",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Current user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "This user does not exist",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },

    "/rooms/public": {
      "get": {
        "tags": ["Rooms"],
        "summary": "Get all public rooms",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Limit of items per page"
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query by rooms"
          },
          {
            "in": "query",
            "name": "topic",
            "schema": {
              "type": "string",
              "enum": [
                "NUTRITION",
                "EXERCISES",
                "MENTAL_HEALTH",
                "PREVENTION",
                "HEALTHY_HABITS"
              ]
            },
            "description": "Filter rooms by topics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Page number for pagination",
                      "example": 1
                    },
                    "perPage": {
                      "type": "integer",
                      "description": "Quantity per page",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "example": 5
                    },
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RoomResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Rooms"],
        "summary": "Add new public room",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "requestBody": {
          "description": "Room data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicRoomResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },

    "/rooms/private/{id}": {
      "post": {
        "tags": ["Rooms"],
        "summary": "Add new private room",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Guest's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Room added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateRoomResponse"
                }
              }
            }
          },
          "200": {
            "description": "If a private room with this guest already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExistsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/rooms/public/owner": {
      "get": {
        "tags": ["Rooms"],
        "summary": "Get all public rooms for owner",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Limit of items per page"
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query by rooms"
          },
          {
            "in": "query",
            "name": "topic",
            "schema": {
              "type": "string",
              "enum": [
                "NUTRITION",
                "EXERCISES",
                "MENTAL_HEALTH",
                "PREVENTION",
                "HEALTHY_HABITS"
              ]
            },
            "description": "Filter public rooms by topics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Page number for pagination",
                      "example": 1
                    },
                    "perPage": {
                      "type": "integer",
                      "description": "Quantity per page",
                      "example": 6
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "example": 5
                    },
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicRoomResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/rooms/public/notown": {
      "get": {
        "tags": ["Rooms"],
        "summary": "Get all public rooms, except for your own",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Limit of items per page"
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query by rooms"
          },
          {
            "in": "query",
            "name": "topic",
            "schema": {
              "type": "string",
              "enum": [
                "NUTRITION",
                "EXERCISES",
                "MENTAL_HEALTH",
                "PREVENTION",
                "HEALTHY_HABITS"
              ]
            },
            "description": "Filter public rooms by topics"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Page number for pagination",
                      "example": 1
                    },
                    "perPage": {
                      "type": "integer",
                      "description": "Quantity per page",
                      "example": 6
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "example": 5
                    },
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicRoomResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/rooms/private": {
      "get": {
        "tags": ["Rooms"],
        "summary": "Get all private rooms for owner",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Limit of items per page"
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query by rooms"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Page number for pagination",
                      "example": 1
                    },
                    "perPage": {
                      "type": "integer",
                      "description": "Quantity per page",
                      "example": 6
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "example": 5
                    },
                    "rooms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PrivateRoomResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/rooms/{id}": {
      "get": {
        "tags": ["Rooms"],
        "security": [{ "ApiKey": [] }],
        "summary": "Get room by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/PrivateRoomResponse" },
                    { "$ref": "#/components/schemas/PublicRoomResponse" }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Room not found",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Rooms"],
        "summary": "Edit room data",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room's id",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Request to update room data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicRoomResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Rooms"],
        "summary": "Delete a room by id",
        "security": [{ "ApiKey": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Room deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Room not found",
            "content": {}
          }
        }
      }
    },

    "/messages/{id}": {
      "post": {
        "tags": ["Messages"],
        "summary": "Add new message",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room's id",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Message data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddMessageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Messages"],
        "summary": "Get all messages by room",
        "security": [{ "ApiKey": [] }],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Room's id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Limit of items per page"
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "description": "Search query by messages"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Page number for pagination",
                      "example": 1
                    },
                    "perPage": {
                      "type": "integer",
                      "description": "Quantity per page",
                      "example": 50
                    },
                    "totalPages": {
                      "type": "integer",
                      "description": "Total pages",
                      "example": 5
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AddMessageResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Messages"],
        "summary": "Delete a message by id",
        "security": [{ "ApiKey": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Message's id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Message deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Message not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "UserRequest": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "minLength": 2,
            "maxLength": 16,
            "example": "Example"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User id",
            "example": "651186532c7fca2273ad2acf"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Example"
          },
          "avatarURL": {
            "type": "string",
            "description": "User avatar url",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },

      "PublicRoomRequest": {
        "type": "object",
        "required": ["title", "topic"],
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the room",
            "minLength": 4,
            "maxLength": 30,
            "example": "Room-1"
          },
          "topic": {
            "type": "string",
            "description": "Topic for public rooms",
            "enum": [
              "NUTRITION",
              "EXERCISES",
              "MENTAL_HEALTH",
              "PREVENTION",
              "HEALTHY_HABITS"
            ],
            "example": "NUTRITION"
          },
          "description": {
            "type": "string",
            "description": "Room description",
            "maxLength": 300,
            "example": "Room description, rules, etc."
          }
        }
      },
      "EditRoomRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the room",
            "minLength": 4,
            "maxLength": 30,
            "example": "Room-1"
          },
          "description": {
            "type": "string",
            "description": "Room description",
            "maxLength": 300,
            "example": "Room description, rules, etc."
          }
        }
      },
      "RoomResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Room's id",
            "example": "1h23u45iumyhigjfsaitfyg"
          },
          "title": {
            "type": "string",
            "description": "The title of the room",
            "example": "Room-1"
          },
          "description": {
            "type": "string",
            "description": "Room description",
            "example": "Room description"
          },
          "img": {
            "type": "string",
            "description": "Image for room",
            "example": "//example.com"
          },
          "type": {
            "type": "string",
            "description": "Room type",
            "example": "public"
          },
          "topic": {
            "type": "string",
            "description": "Room topic for public rooms",
            "example": "NUTRITION"
          },
          "createdAt": {
            "type": "Date",
            "description": "Room creation date",
            "example": "2023-07-23T20:00:30.149+00:00"
          },
          "updatedAt": {
            "type": "Date",
            "description": "Room updated date",
            "example": "2023-07-23T20:00:30.149+00:00"
          }
        }
      },
      "PublicRoomResponse": {
        "type": "object",
        "properties": {
          "room": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Room's id",
                "example": "653c20669b6334f0b861e498"
              },
              "title": {
                "type": "string",
                "description": "The title of the room",
                "example": "Room-1"
              },
              "topic": {
                "type": "string",
                "description": "Room topic for public rooms",
                "example": "NUTRITION"
              },
              "type": {
                "type": "string",
                "description": "Room type",
                "example": "public"
              },
              "description": {
                "type": "string",
                "description": "Room description",
                "example": "Room description"
              },
              "img": {
                "type": "string",
                "description": "Image for room",
                "example": "//example.com"
              },
              "owner": {
                "type": "string",
                "description": "Room's owner id",
                "example": "659852ec30fb49241197777f"
              },
              "users": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Room's user id",
                  "example": "32143dshtuv2dfyuijhgf45474"
                }
              },
              "createdAt": {
                "type": "Date",
                "description": "Room creation date",
                "example": "2023-07-23T20:00:30.149+00:00"
              },
              "updatedAt": {
                "type": "Date",
                "description": "Room updated date",
                "example": "2023-07-23T20:00:30.149+00:00"
              }
            }
          },
          "member": {
            "type": "boolean",
            "description": "Shows whether the user is a member of this room",
            "example": true
          }
        }
      },
      "PrivateRoomResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Room's id",
            "example": "653c20669b6334f0b861e498"
          },
          "title": {
            "type": "string",
            "description": "The title of the room",
            "example": "Olga"
          },
          "img": {
            "type": "string",
            "description": "Image for room",
            "example": "//example.com"
          },
          "type": {
            "type": "string",
            "description": "Room type",
            "example": "private"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Room's owner id",
                "example": "656f8d000b67852caa0579b1"
              },
              "name": {
                "type": "string",
                "description": "Room's owner name",
                "example": "Mango"
              },
              "avatarURL": {
                "type": "string",
                "description": "Room's owner avatar URL",
                "example": "https://example.com/avatar.jpg"
              }
            }
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Room's owner id",
                  "example": "656f8d000b67852caa0579b1"
                },
                "name": {
                  "type": "string",
                  "description": "Room's owner name",
                  "example": "Mango"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "Room's owner avatar URL",
                  "example": "https://example.com/avatar.jpg"
                }
              }
            },
            "example": [
              {
                "_id": "656f8e5db4abf60f16393a42",
                "name": "Olga",
                "avatarURL": "https://example.com/avatar.jpg"
              },
              {
                "_id": "656f8d000b67852caa0579b1",
                "name": "Mango",
                "avatarURL": "https://example.com/avatar.jpg"
              }
            ],
            "maxItems": 2
          },
          "createdAt": {
            "type": "Date",
            "description": "Room creation date",
            "example": "2023-07-23T20:00:30.149+00:00"
          },
          "updatedAt": {
            "type": "Date",
            "description": "Room updated date",
            "example": "2023-07-23T20:00:30.149+00:00"
          }
        }
      },

      "MessageRequest": {
        "type": "object",
        "required": ["content"],
        "properties": {
          "content": {
            "type": "string",
            "description": "Message content",
            "maxLength": 1000,
            "example": "Message content"
          }
        }
      },
      "AddMessageResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Message's id",
            "example": "1h23u45iumyhigjfsaitfyg"
          },
          "roomId": {
            "type": "string",
            "description": "Identifier of the room in which this message was written",
            "example": "1h23u45iumyhigjfsaitfyg"
          },
          "content": {
            "type": "string",
            "description": "Message content",
            "example": "Message content"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Reply's owner id",
                "example": "nfuwjhretyhbvcbuiwrhty"
              },
              "name": {
                "type": "string",
                "description": "Reply's owner name",
                "example": "Mango"
              },
              "avatarURL": {
                "type": "string",
                "description": "Reply's owner avatar URL",
                "example": "https://example.com/avatar.jpg"
              }
            }
          },
          "replys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplyResponse"
            }
          },
          "createdAt": {
            "type": "Date",
            "description": "Message creation date",
            "example": "2023-07-23T20:00:30.149+00:00"
          },
          "updatedAt": {
            "type": "Date",
            "description": "Message updated date",
            "example": "2023-07-23T20:00:30.149+00:00"
          }
        }
      },
      "ReplyResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Reply's owner id",
            "example": "nfuwjhretyhbvcbuiwrhty"
          },
          "content": {
            "type": "string",
            "description": "Reply's owner name",
            "example": "Mango"
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Reply's owner id",
                "example": "nfuwjhretyhbvcbuiwrhty"
              },
              "name": {
                "type": "string",
                "description": "Reply's owner name",
                "example": "Mango"
              },
              "avatarURL": {
                "type": "string",
                "description": "Reply's owner avatar URL",
                "example": "https://example.com/avatar.jpg"
              }
            }
          },
          "createdAt": {
            "type": "Date",
            "description": "Message creation date",
            "example": "2023-07-23T20:00:30.149+00:00"
          },
          "updatedAt": {
            "type": "Date",
            "description": "Message updated date",
            "example": "2023-07-23T20:00:30.149+00:00"
          }
        }
      },

      "DeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notification of successful deletion"
          },
          "deletedId": {
            "type": "string",
            "description": "Id of the deleted object"
          }
        }
      },

      "ExistsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Notification of the existence of a private room"
          },
          "roomId": {
            "type": "string",
            "description": "Id of the existing private room"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "name": "ApiKey",
        "in": "header"
      }
    }
  }
}
